#include "variables.h"

HERO Hero;
MONSTER Monster[MONSTER_NUM];
FLOOR Tower[TOTAL_FLOOR];

void init_monsters()
{
	Monster[0].name = "スライム";
	Monster[0].hp = 35;
	Monster[0].atk = 18;
	Monster[0].def = 1;
	Monster[0].gold = 1;

	Monster[1].name = "死体";
	Monster[1].hp = 50;
	Monster[1].atk = 42;
	Monster[1].def = 4;
	Monster[1].gold = 6;

	Monster[2].name = "魔法師";
	Monster[2].hp = 60;
	Monster[2].atk = 32;
	Monster[2].def = 8;
	Monster[2].gold = 5;

	Monster[3].name = "衛兵"; 
	Monster[3].hp = 50;
	Monster[3].atk = 48;
	Monster[3].def = 22;
	Monster[3].gold = 12;

	Monster[4].name = "ボス";
	Monster[4].hp = 100;
	Monster[4].atk = 65;
	Monster[4].def = 15;
	Monster[4].gold = 30;

}

HERO::HERO()
{
	hp = 1000;
	atk = 10;
	def = 10;
	pos_x = 6;
	pos_y = 11;
	floor = 0;
	gold = 0;
	key = 0;
}

void init_tower()
{
	FLOOR floor_1 = 
	{
		1,1,1,1,1,1,1,1,1,1,1,1,1,
		1,11, 0, 50, 50, 50, 0, 0, 0, 0, 0, 0,1,
		1,1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0,1,
		1,30, 0, 0, 10, 0, 1, 20, 22, 0, 1, 0,1,
		1,0, 51, 0, 1, 0, 1, 21, 30, 0, 1, 0,1,
		1,1, 10, 1, 1, 0, 1, 1, 1, 10, 1, 0,1,
		1,22, 0, 0, 1, 0, 10, 50, 52, 50, 1, 0,1,
		1,0, 51, 0, 1, 0, 1, 1, 1, 1, 1, 0,1,
		1,1,10,1,1,0,0,0,0,0,0,0,1,
		1,0, 0, 0, 1, 1, 10, 1, 1, 1, 10, 1,1,
		1,30, 0, 22, 1, 22, 0, 0, 1, 0, 50, 0,1,
		1,30, 0, 22, 1, 0, 0, 0, 1, 50, 30, 50,1,
		1,1,1,1,1,1,1,1,1,1,1,1,1,
	}; memcpy(Tower[0], floor_1, sizeof(int)* X* Y);

	FLOOR floor_2 =
	{
		1,1,1,1,1,1,1,1,1,1,1,1,1,
		1,12,0,10,0,0,0,0,0,0,0,0,1,
		1,0,0,1,1,0,0,53,0,0,1,1,1,
		1,0,1,1,1,1,1,53,1,1,1,1,1,
		1,0,1,22,22,1,22,0,22,1,20,20,1,
		1,0,1,22,0,10,0,0,0,10,21,21,1,
		1,0,1,1,1,1,0,0,0,1,1,1,1,
		1,0,1,30,30,1,22,0,22,1,20,21,1,
		1,0,1,30,0,10,0,0,0,10,21,20,1,
		1,0,1,1,1,1,0,0,0,1,1,1,1,
		1,0,1,30,30,1,22,0,22,1,0,0,1,
		1,11,1,30,0,10,0,0,0,10,0,0,1,
		1,1,1,1,1,1,1,1,1,1,1,1,1,
	}; memcpy(Tower[1], floor_2, sizeof(int)* X* Y);

	FLOOR floor_3 =
	{
		1,1,1,1,1,1,1,1,1,1,1,1,1,
		1,22,21,1,22,30,22,1,0,1,0,30,1,
		1,0,30,1,30,22,30,1,0,10,51,0,1,
		1,52,0,1,22,22,22,1,0,1,1,1,1,
		1,10,1,1,1,0,1,1,0,1,0,30,1,
		1,0,0,52,0,0,0,50,0,0,0,0,1,
		1,10,1,1,0,0,0,1,0,1,1,1,1,
		1,51,0,1,1,0,1,1,0,1,0,30,1,
		1,0,22,1,0,0,0,1,0,10,52,22,1,
		1,30,20,1,0,0,0,1,0,1,1,1,1,
		1,1,1,1,1,0,1,1,50,1,0,0,1,
		1,12,0,0,0,0,0,1,0,10,0,11,1,
		1,1,1,1,1,1,1,1,1,1,1,1,1,
	}; memcpy(Tower[2], floor_3, sizeof(int)* X* Y);

	FLOOR floor_4 =
	{
		1,1,1,1,1,1,1,1,1,1,1,1,1,
		1,0,22,0,1,0,23,0,1,0,21,0,1,
		1,30,0,22,1,0,0,0,1,22,0,30,1,
		1,0,52,0,1,0,0,0,1,0,53,0,1,
		1,1,10,1,1,1,10,1,1,1,10,1,1,
		1,0,0,0,10,0,50,0,0,51,0,0,1,
		1,0,0,0,1,1,1,1,1,1,1,1,1,
		1,50,0,50,0,0,0,0,0,0,0,0,1,
		1,10,1,1,10,1,1,1,10,1,1,10,1,
		1,0,1,0,51,0,1,0,52,0,1,0,1,
		1,0,1,50,30,22,1,20,0,30,1,0,1,
		1,11,1,22,50,22,1,0,50,30,1,12,1,
		1,1,1,1,1,1,1,1,1,1,1,1,1,
	}; memcpy(Tower[3],floor_4, sizeof(int)* X* Y);

	FLOOR floor_5 =
	{
		1,1,1,1,1,1,1,1,1,1,1,1,1,
		1,11,1,0,50,10,0,1,0,0,10,0,1,
		1,0,1,0,0,1,22,1,50,50,1,50,1,
		1,0,10,51,0,1,0,1,22,22,1,0,1,
		1,1,1,1,10,1,51,1,22,22,1,0,1,
		1,22,0,51,0,1,0,1,1,1,1,0,1,
		1,22,0,0,50,1,0,50,0,0,0,0,1,
		1,1,53,1,1,1,0,1,1,1,1,50,1,
		1,0,0,0,0,1,50,1,50,51,50,30,1,
		1,21,22,30,20,1,0,1,10,1,1,1,1,
		1,1,1,1,1,1,0,1,22,1,0,0,1,
		1,12,0,0,0,0,0,1,0,10,0,40,1,
		1,1,1,1,1,1,1,1,1,1,1,1,1,
	}; memcpy(Tower[4], floor_5, sizeof(int)* X* Y);

	FLOOR floor_6 =
	{
		1,1,1,1,1,1,1,1,1,1,1,1,1,
		1,12,1,22,22,1,0,52,0,22,50,0,1,
		1,0,1,22,22,1,0,1,1,1,1,10,1,
		1,0,1,1,50,1,0,1,30,51,51,0,1,
		1,0,10,10,0,10,0,1,22,51,0,50,1,
		1,0,1,1,1,1,0,1,1,1,1,1,1,
		1,0,0,50,52,0,22,0,50,51,0,0,1,
		1,1,1,1,1,1,0,1,1,1,1,0,1,
		1,52,0,0,30,1,0,10,10,0,10,0,1,
		1,0,50,0,21,1,0,1,1,50,1,50,1,
		1,10,1,1,1,1,0,1,0,0,1,0,1,
		1,0,50,0,0,51,0,1,30,30,1,11,1,
		1,1,1,1,1,1,1,1,1,1,1,1,1,
	}; memcpy(Tower[5], floor_6, sizeof(int)* X* Y);

	FLOOR floor_7 =
	{
		1,1,1,1,1,1,1,1,1,1,1,1,1,
		1,11,1,20,1,30,22,0,1,22,1,50,1,
		1,0,1,30,1,0,0,0,1,22,1,50,1,
		1,0,1,50,1,50,1,52,1,30,1,50,1,
		1,0,1,0,1,0,1,0,1,0,1,0,1,
		1,10,1,10,1,10,1,10,1,51,1,10,1,
		1,0,53,0,52,0,53,0,0,0,0,0,1,
		1,10,1,10,1,10,1,10,1,53,1,10,1,
		1,0,1,0,1,0,1,0,1,0,1,0,1,
		1,0,1,0,1,50,1,50,1,30,1,0,1,
		1,50,1,50,1,22,1,52,1,22,1,0,1,
		1,0,50,0,1,22,1,30,1,22,1,12,1,
		1,1,1,1,1,1,1,1,1,1,1,1,1,
	}; memcpy(Tower[6], floor_7, sizeof(int)* X* Y);

	FLOOR floor_8 =
	{
		1,1,1,1,1,1,1,1,1,1,1,1,1,
		1,12,0,10,10,0,11,0,1,22,20,22,1,
		1,0,0,1,1,0,0,50,1,21,22,20,1,
		1,10,1,1,1,1,10,1,1,30,21,30,1,
		1,0,1,22,22,22,0,0,1,1,10,1,1,
		1,30,1,1,1,1,1,52,1,0,53,0,1,
		1,0,50,50,50,0,1,0,1,0,53,0,1,
		1,1,1,1,1,10,1,50,1,1,10,1,1,
		1,0,0,0,50,0,51,0,52,0,0,0,1,
		1,10,1,1,1,1,1,1,1,1,1,10,1,
		1,50,0,1,20,22,1,22,30,1,0,51,1,
		1,0,51,10,22,21,1,22,0,10,53,0,1,
		1,1,1,1,1,1,1,1,1,1,1,1,1,
	}; memcpy(Tower[7], floor_8, sizeof(int)* X* Y);

	FLOOR floor_9 =
	{
		1,1,1,1,1,1,1,1,1,1,1,1,1,
		1,0,0,51,10,0,12,0,10,50,0,30,1,
		1,0,22,0,1,0,0,0,1,0,50,0,1,
		1,53,1,1,1,1,1,1,1,1,1,10,1,
		1,0,22,0,1,22,0,22,10,10,0,0,1,
		1,21,0,50,10,0,20,0,1,1,1,1,1,
		1,1,1,1,1,1,1,50,1,0,0,53,1,
		1,22,0,10,53,22,1,0,1,41,1,0,1,
		1,53,0,1,0,0,1,0,1,1,1,10,1,
		1,10,1,1,1,10,1,0,1,22,0,52,1,
		1,0,30,1,0,51,1,50,1,0,51,0,1,
		1,11,53,53,53,0,10,0,10,52,0,30,1,
		1,1,1,1,1,1,1,1,1,1,1,1,1,
	}; memcpy(Tower[8], floor_9, sizeof(int)* X* Y);

	FLOOR floor_10 =
	{
		1,1,1,1,1,1,1,1,1,1,1,1,1,
		1,1,1,1,1,1,2,1,1,1,1,1,1,
		1,1,1,1,1,1,54,1,1,1,1,1,1,
		1,20,21,30,1,1,51,1,1,20,21,30,1,
		1,21,20,0,53,0,51,0,53,0,21,20,1,
		1,1,1,1,1,1,51,1,1,1,1,1,1,
		1,51,21,51,1,1,51,1,1,51,20,51,1,
		1,0,53,0,1,1,51,1,1,0,53,0,1,
		1,0,0,0,1,1,51,1,1,0,0,0,1,
		1,10,1,10,1,1,10,1,1,10,1,10,1,
		1,0,1,0,1,0,0,0,1,0,1,0,1,
		1,12,1,0,52,0,0,0,52,0,1,30,1,
		1,1,1,1,1,1,1,1,1,1,1,1,1,
	}; memcpy(Tower[9], floor_10, sizeof(int)* X* Y);
};